## This shows all configuration options of RUN-DSP, what they do and the corresponsing environment variables.###### RUN-DSP reference configuration file #####
## The default location of the configuration file is /etc/run-dsp/run-dsp.toml but you can change that
## with the `-c` command line flag

### GLOBAL OPTIONS ###
humanReadable = true # Sets the output to a human readable format ($HUMANREADABLE)
logLevel = "info"    # Sets the log level. Valid values: debug/info/warn/error ($LOGLEVEL)

### SERVER OPTIONS ###
[server]
prometheusEnabled = false             # Enable prometheus metrics ($SERVER.PROMETHEUSENABLED)
prometheusAddress = "127.0.0.1"       # IP address of the local machine to listen to for prometheus metrics. ($SERVER.PROMETHEUSADDRESS)
prometheusPort = 8082                 # TCP port to listen on for prometheus metrics. ($SERVER.PROMETHEUSPORT)

## Dataspace component configuration
[server.dsp]
address = "127.0.0.1"                 # IP address of the local machine to listen to for dataspace requests. ($SERVER.DSP.ADDRESS)
port = 8080                           # TCP port to listen on for dataspace requests. ($SERVER.DSP.PORT)
externalURL = "http://127.0.0.1:8080" # Address that we are reachable by to other dataspace participants. ($SERVER.DSP.EXTERNALURL)

## Provider gRPC settings
[server.provider]
address = "127.0.0.1:9090"            # The address of the provider service. ($SERVER.PROVIDER.ADDRESS)
insecure = false                      # Disable TLS when connecting to the provider. ($SERVER.PROVIDER.INSECURE)
caCert = "/path/to/ca.crt"            # Path to the CA certificate of the CA that issued the server certificate of the provider. ($SERVER.PROVIDER.CACERT)
clientCert = "/path/to/client.crt"    # Client certificate to authenticate with to the provider. ($SERVER.PROVIDER.CLIENTCERT)
clientCertKey = "/path/to/client.key" # Key to the above mentioned certificate. ($SERVER.PROVIDER.CLIENTCERTKEY)

## Contract service gRPC settings
[server.contractService]
address = "127.0.0.1:9092"            # The address of the contract service. ($SERVER.CONTRACTSERVICE.ADDRESS)
insecure = false                      # Disable TLS when connecting to the contract service. ($SERVER.CONTRACTSERVICE.INSECURE)
caCert = "/path/to/ca.crt"            # Path to the CA certificate of the CA that issued the server certificate of the contract service. ($SERVER.CONTRACTSERVICE.CACERT)
clientCert = "/path/to/client.crt"    # Client certificate to authenticate with to the contract service. ($SERVER.CONTRACTSERVICE.CLIENTCERT)
clientCertKey = "/path/to/client.key" # Key to the above mentioned certificate. ($SERVER.CONTRACTSERVICE.CLIENTCERTKEY)

## Control service settings
[server.control]
enabled = true                     # Enable the control service. ($SERVER.CONTROL.ENABLED)
address = "127.0.0.1"              # IP address of the local machine to listen to for the control service. ($SERVER.CONTROL.ADDRESS)
port = 8081                        # TCP port to listen on for the control service. ($SERVER.CONTROL.PORT)
externalAddress = "127.0.0.1:8081" # The address that the control service is reachable by. ($SERVER.CONTROL.EXTERNALADDRESS)
insecure = false                   # Disable TLS for the control service ($SERVER.CONTROL.INSECURE)
cert = "/path/to/control.crt"      # TLS certificate to use for the control service ($SERVER.CONTROL.CERT)
certKey = "/path/to/control.key"   # Key to the above mentioned certificate. ($SERVER.CONTROL.CERTKEY)
verifyClientCerts = true           # Only allow access to clients with a certificate issued by the CA defined below. ($SERVER.CONTROL.VERIFYCLIENTCERTS)
clientCACert = "/etc/hosts"        # Certificate of the CA that issues client certificates. ($SERVER.CONTROL.CLIENTCACERT)

## Persistence settings
[server.persistence]
backend = "badger" #  Persistence backend to use. "badger" is the only available option right now. ($SERVER.PERSISTENCE.BACKEND)

## Badger persistence backend settings
[server.persistence.badger]
memory = true # Enable in-memory mode, this will put the database in-memory, making it not persist
# between restarts. ($SERVER.PERSISTENCE.BADGER.MEMORY)
dbPath = "/path/to/database" # Directory to store the database in. ($SERVER.PERSISTENCE.BADGER.DBPATH}
