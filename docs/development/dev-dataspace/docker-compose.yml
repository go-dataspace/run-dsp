# This compose file sets up a "mini-dataspace".
# This means that it sets up two RUN-DSP instances using the current source tree, and one
# instance of the reference provider.
#
# The control service of the "client" RUN-DSP instance is open on port 18081 and can be controlled
# with the RUN-DSP client.
# The reference provider (which is used by both RUN-DSP instances) has its publish service
# reachable on port 19091.
#
# This setup is useful to test if separate instances can communicate using the dataspace protocol.
#
# The following client configuration file will be able to use this:
#
# [client]
# address = "127.0.0.1:18080"
# insecure = true
# authMD = "User1"
#
name: run-dsp development dataspace

services:
  run-dsp-client:
    build:
      context: ../../../
      dockerfile: Dockerfile.debug
    command: server
    environment:
      - LOGLEVEL=debug
      - SERVER.PROVIDER.ADDRESS=reference-provider:9090
      - SERVER.PROVIDER.INSECURE=true
      - SERVER.DSP.EXTERNALURL=http://run-dsp-client:8080/
      - SERVER.CONTROL.ENABLED=true
      - SERVER.CONTROL.INSECURE=true
    ports:
      - '18081:8081'
      - '14000:4000'
    depends_on:
      - reference-provider
  run-dsp-provider:
    build:
      context: ../../../
      dockerfile: Dockerfile.debug
    command: server
    # When you want to emulate a slow provider, uncomment this.
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '0.01'
    environment:
      - LOGLEVEL=debug
      - SERVER.PROVIDER.ADDRESS=reference-provider:9090
      - SERVER.PROVIDER.INSECURE=true
      - SERVER.DSP.EXTERNALURL=http://run-dsp-provider:8080/
    ports:
      - '28081:8081'
      - '24000:4000'
    depends_on:
      - reference-provider
  reference-provider:
    image: ghcr.io/go-dataspace/reference-provider:main
    command: server
    environment:
      - LOGLEVEL=debug
      - PROVIDER_INSECURE=true
      - EXTERNAL_URL=http://127.0.0.1:19091/
    ports:
      - '19090:9090'
      - '19091:9091'
